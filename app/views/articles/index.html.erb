<div class="main">

	<div class="panel panel-fixed">
		<div class="panel-inner">
			<h1>What to build, features or tests?</h1>
			<p>
				The time dedicated towards building features vs building tests is a delicate balance bordering on that of an art form.
				As we all know, when feature after feature is built into our app, our gut starts telling us somethin' ain't right (and if it doesn't, our app will).
				Like lactic acid builds up after a workout, so evidence of technical debt grows with our features.
				<p></p>
				So how do we find a balance between features and tests? Let's prioritize test type by catagorizing tests down to integration, unit, and view.
				First, the user experience is king, so focus on ensuring you have an integration test for your most important and frequently visited user stories.
				Then focus on
			</p>
		</div>
	</div>

	<div class="panel panel-queued">
		<div class="panel-inner">
			<h1>Future Post</h1>
			<p></p>
		</div>
	</div>

	<div class="panel panel-queued">
		<div class="panel-inner">
			<h1>Future Post</h1>
			<p></p>
		</div>
	</div>

	<div class="panel panel-queued">
		<div class="panel-inner">
			<h1>Future Post</h1>
			<p></p>
		</div>
	</div>

</div>


<script>

	$(function() {
		// Set up vars
		var _window = $(window),
			panels = $('.panel'),
			panelsY = [];

		// Cache position of each panel
		$.each(panels, function(i, el) {
			const position = panels.eq(i).offset().top - 180;
			panelsY.push(position);
		});

		// Bind our function to window scroll
		_window.bind('scroll', function() {
			updateWindow();
		});

		// Update the window
		function updateWindow() {
			var y = _window.scrollTop();

			// Loop through our panel positions
			for (i = 0, l = panels.length; i < l; i++) {
				/*
				Firstly, we break if we're checking our last panel,
				otherwise we compare if the y position is in between
				two panels
				*/
				if ((i === l - 1) || (y >= panelsY[i] && y <= panelsY[i+1])) {
					break;
				}
			}

			// Update classes
			removePanel();
			panels.eq(i).addClass('panel-fixed');
		}

		function removePanel() {
			panels.not(':eq(' + i + ')').removeClass('panel-fixed');
		}

	});
</script>
